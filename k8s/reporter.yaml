apiVersion: v1
kind: Service
metadata:
    name: reporter
    labels:
        app: reporter
spec:
    ports:
    - port: 80
      targetPort: 8081
    type: NodePort
    selector:
        app: reporter
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
    name: reporter
spec:
    replicas: 1
    selector:
      matchLabels:
        app: reporter
    template:
        metadata:
          labels:
            app: reporter
        spec:
            containers:
            - name: esp
              image: gcr.io/endpoints-release/endpoints-runtime:1
              args: [
                "-p", "8081",
                "-a", "127.0.0.1:8080",
                "-s", "zing-reporter.endpoints.zing-mock.cloud.goog",
                "-v", "2017-11-03r0",
                "-z", "healthz",
              ]
              readinessProbe:
                httpGet:
                  path: /healthz
                  port: 8081
              ports:
                - containerPort: 8081
            - name: reporter
              image: eamonwoortman/alpine-python-curl-zip
              command: ["python"]
              args: ["./server.py"]
              env:
                - name: MICROSERVICE
                  valueFrom:
                    configMapKeyRef:
                      name: reporter-env
                      key: svc.name
              workingDir: /server
              #ports:
              #- containerPort: 8000
              volumeMounts:
              - mountPath: /server
                name: server-vol
            volumes:
            - name: server-vol
              configMap:
                name: server-vol
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: reporter-env
  namespace: default
data:
  svc.name: reporter